<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- bean definitions here -->
    <context:component-scan base-package="com.bupt"/>
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/20_db?characterEncoding=utf-8&amp;&amp;serverTimezone=GMT"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!--<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--</bean>-->

    <!--TransactionProxyFactoryBean-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!--target-->
        <property name="target" ref="accountServiceImpl"/>
        <!--txManager-->
        <property name="transactionManager" ref="transactionManager"/>
        <!--transactionAttributes defination-->
        <property name="transactionAttributes">
            <props>
                <!--key = 方法名 value = definition
                propagation → PROPAGATION_REQUIRED PROPAGATION_REQUIRES_NEW
                isolation → ISOLATION_REPEATABLE_READ ISOLATION_DEFAULT
                timeout → timeout_5 5秒超时时间，单位是秒
                readonly → 如果只读就只写readonly
                +XXXException → 针对xxx这个异常不回滚，发生xxx异常依然提交
                -xxxException → 针对xxx这个异常回滚
                -->
                <prop key="transfer">PROPAGATION_REQUIRED,ISOLATION_REPEATABLE_READ,timeout_5</prop>
                <!--+java.lang.ArithmeticException 意味着 发生这个异常的时候依然提交-->
                <!--<prop key="transfer">PROPAGATION_REQUIRED,ISOLATION_REPEATABLE_READ,timeout_5,+java.lang.ArithmeticException</prop>-->
            </props>
        </property>
    </bean>

</beans>